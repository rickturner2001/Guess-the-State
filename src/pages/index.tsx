import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useRef, useState } from "react";
import { useGuesses, useGuessesUpdate } from "../components/context";
import StatesTable from "../components/StatesTable";
import UsMap from "../components/UsMap";
import allStates from "../data/allStates.json";

enum GuessState {
  INITIAL,
  CORRECT,
  WRONG,
  DUPLICATE,
}

const Home: NextPage = () => {
  const currentInput = useRef<HTMLInputElement>(null);
  const guesses = useGuesses();
  const guessesUpdate = useGuessesUpdate();

  const [previousGuess, setPreviousGuess] = useState(GuessState.INITIAL);

  useEffect(() => {}, [guesses]);

  const parseNewInput = () => {
    const guessCheck = allStates.filter(
      (statesData) =>
        currentInput.current?.value.toLowerCase() ===
        statesData.name.toLowerCase()
    );

    if (guessCheck[0]) {
      if (!guesses.includes(guessCheck[0].val)) {
        guessesUpdate(guessCheck[0].val);
        setPreviousGuess(GuessState.CORRECT);
      } else {
        setPreviousGuess(GuessState.DUPLICATE);
      }
    } else {
      setPreviousGuess(GuessState.WRONG);
    }
    if (currentInput.current) {
      currentInput.current.value = "";
    }
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="h-screen">
        <header className="mb-8">
          <div>
            <h1 className="text-center text-5xl tracking-wide font-bold py-5 text-gray-800">
              U.S States Quiz
            </h1>
          </div>
        </header>
        <main className="flex flex-col items-center justify-center w-[100%]">
          <div className="flex flex-col md:flex-row  space-y-6 md:space-y-0 md:space-x-4 items-center">
            <input
              ref={currentInput}
              onKeyDown={(e) => {
                if (e.key == "Enter") {
                  parseNewInput();
                }
              }}
              type="text"
              className={`border-gray-300 rounded-md border bg-red w-80 h-9 p-2 focus:outline-none shadow-sm focus:scale-105 focus:shadow-md transition-all ${
                previousGuess === GuessState.CORRECT
                  ? "border border-green-500"
                  : previousGuess === GuessState.WRONG
                  ? "border border-red-500"
                  : previousGuess === GuessState.DUPLICATE
                  ? "border-yellow-500"
                  : ""
              }`}
            />

            <button
              onClick={() => parseNewInput()}
              className="py-2 px-3 bg-green-600 shadow-sm rounded-md font-bold text-white active:scale-105 transition-transform"
            >
              Confirm
            </button>
          </div>
          <div className="flex w-full h-[40rem] justify-center  gap-44 mt-14 ">
            <div id="map" className="w-[50%]">
              <UsMap />
            </div>
            <StatesTable guesses={guesses} />
          </div>

          <div id="scoreboard"></div>
        </main>
      </div>
    </>
  );
};

export default Home;
